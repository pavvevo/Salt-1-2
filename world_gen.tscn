[gd_scene load_steps=3 format=3 uid="uid://badsai1uxjgke"]

[sub_resource type="GDScript" id="GDScript_4wosk"]
script/source = "extends Node3D

var material  = preload(\"res://shaders/WorldMaterial.tres\")
@export var max_height = 10.0
@export var size = 50 
@export var res = 200

@onready var helper = $Helper

func _ready():
	var noise = FastNoiseLite.new()
	noise.seed = randi()
	noise.fractal_octaves = 6
	#noise.period = 80.0
	
	var plane_mesh = PlaneMesh.new()
	plane_mesh.size= Vector2(size, size)
	plane_mesh.subdivide_depth = 200
	plane_mesh.subdivide_width = 200
	
	var surface_tool = SurfaceTool.new()
	surface_tool.create_from(plane_mesh, 0)
	
	var array_plane = surface_tool.commit()
	
	var data_tool = MeshDataTool.new()
	
	data_tool.create_from_surface(array_plane, 0)
	
	for i in range(data_tool.get_vertex_count()):
		var vertex = data_tool.get_vertex(i)
		vertex.y = 0 + noise.get_noise_2d(vertex.x, vertex.z) * max_height
		
		data_tool.set_vertex(i, vertex)

	array_plane.clear_surfaces()
	
	data_tool.commit_to_surface(array_plane)
	surface_tool.begin(Mesh.PRIMITIVE_TRIANGLES)
	surface_tool.create_from(array_plane, 0)
	surface_tool.generate_normals()
	
	var mesh_instance = MeshInstance3D.new()
	mesh_instance.mesh = surface_tool.commit()
	mesh_instance.set_surface_override_material(0, material)
	mesh_instance.create_trimesh_collision()
	
	material.set_shader_parameter(\"max_height\", max_height)
	
	add_child(mesh_instance)
	print(\"yeaa\")
"

[sub_resource type="PlaneMesh" id="PlaneMesh_7ajs3"]
size = Vector2(5, 5)

[node name="WorldGen" type="Node3D"]
script = SubResource("GDScript_4wosk")

[node name="Helper" type="MeshInstance3D" parent="."]
mesh = SubResource("PlaneMesh_7ajs3")
